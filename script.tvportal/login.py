import base64;exec base64.b64decode('#
#      Copyright (C) 2016 noobsandnerds.com
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with XBMC; see the file COPYING.  If not, write to
#  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
#  http://www.gnu.org/copyleft/gpl.html
#
if 64 - 64: i11iIiiIii
import xbmc , xbmcaddon , xbmcgui , os , re , urllib , urllib2
import time , shutil , binascii , hashlib , sys
import extract , download
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
if 73 - 73: II111iiii
def IiII1IiiIiI1 ( url ) :
 return binascii . unhexlify ( url )
 if 40 - 40: oo * OoO0O00
 if 2 - 2: ooOO00oOo % oOo0O0Ooo * Ooo00oOo00o . oOoO0oo0OOOo + iiiiIi11i
Ii1I = xbmc . getInfoLabel ( 'ListItem.FolderPath' )
IiiIII111iI = Ii1I . split ( '://' )
IiII = IiiIII111iI [ - 1 ]
if IiII . endswith ( '/' ) or IiII . endswith ( '\\' ) :
 IiII = IiII [ : - 1 ]
try :
 if sys . argv [ 1 ] == IiII1IiiIiI1 ( '7465737466696c65' ) :
  IiII = IiII + '.test'
except :
 pass
 if 28 - 28: Ii11111i * iiI1i1
i1I1ii1II1iII = IiII
if not IiII . endswith ( IiII1IiiIiI1 ( '2e74657374' ) ) :
 i1I1ii1II1iII = IiII + IiII1IiiIiI1 ( '2e74657374' )
 if 86 - 86: oO0o
IIII = IiII . replace ( IiII1IiiIiI1 ( '2e74657374' ) , '' )
Oo0oO0oo0oO00 = IiII
i111I = xbmcaddon . Addon ( id = IiII )
II1Ii1iI1i = xbmcaddon . Addon ( id = IIII )
iiI1iIiI = i111I . getSetting ( IiII1IiiIiI1 ( '74657374766572' ) )
OOo = xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f686f6d652f7573657264617461' ) )
Ii1IIii11 = xbmc . translatePath ( os . path . join ( OOo , IiII1IiiIiI1 ( '6164646f6e5f64617461' ) ) )
Oooo0000 = xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f686f6d652f6164646f6e73' ) )
i11 = os . path . join ( Oooo0000 , IiII , IiII1IiiIiI1 ( '6c6f67696e2e7079' ) )
I11 = os . path . join ( Oooo0000 , IiII , IiII1IiiIiI1 ( '7265736f7572636573' ) , IiII1IiiIiI1 ( '7570646174652e706e67' ) )
Oo0o0000o0o0 = os . path . join ( Oooo0000 , IiII , IiII1IiiIiI1 ( '7265736f7572636573' ) , IiII1IiiIiI1 ( '6261636b7570' ) )
oOo0oooo00o = xbmc . translatePath ( os . path . join ( Ii1IIii11 , IIII , IiII1IiiIiI1 ( '636f6f6b696573' ) , IiII1IiiIiI1 ( '74656d70' ) ) )
oO0o0o0ooO0oO = II1Ii1iI1i . getSetting ( IiII1IiiIiI1 ( '6c6f67696e' ) )
oo0o0O00 = II1Ii1iI1i . getSetting ( IiII1IiiIiI1 ( '666f72756d' ) )
oO = II1Ii1iI1i . getSetting ( IiII1IiiIiI1 ( '757365726e616d65' ) ) . replace ( ' ' , '%20' )
i1iiIIiiI111 = II1Ii1iI1i . getSetting ( IiII1IiiIiI1 ( '70617373776f7264' ) )
oooOOOOO = xbmcgui . Dialog ( )
i1iiIII111ii = xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f686f6d652f6164646f6e732f7061636b616765732f6370' ) )
i1iIIi1 = 0
ii11iIi1I = 'launch.py'
iI111I11I1I1 = [ ]
if 55 - 55: iI1I % iiiIi - OO / i1I111I - OoO0O00 . oO0o
if oo0o0O00 == IiII1IiiIiI1 ( '556e6f6666696369616c204b6f646920537570706f7274' ) :
 oo0o0O00 = 'k'
if oo0o0O00 == IiII1IiiIiI1 ( '436f6d6d756e697479204275696c647320537570706f7274' ) :
 oo0o0O00 = 'c'
 if 86 - 86: iiI1i1 + iiiiIi11i - i1IIi / i11iIiiIii + Ii11111i + ooOO00oOo
iIi = IiII1IiiIiI1 ( '6164646f6e2e786d6c' )
II = xbmc . translatePath ( os . path . join ( Oooo0000 , IiII , iIi ) )
iI = open ( II , mode = 'r' )
iI11iiiI1II = file . read ( iI )
file . close ( iI )
O0oooo0Oo00 = re . compile ( '<ref>(.+?)</ref>' ) . findall ( iI11iiiI1II )
Ii11iii11I = O0oooo0Oo00 [ 0 ] if ( len ( O0oooo0Oo00 ) > 0 ) else ''
oOo00Oo00O = hashlib . md5 ( open ( i11 , 'rb' ) . read ( ) ) . hexdigest ( )
if Ii11iii11I != oOo00Oo00O :
 iI11i1I1 = open ( Oo0o0000o0o0 , mode = 'r' )
 iI11iiiI1II = file . read ( iI11i1I1 )
 file . close ( iI11i1I1 )
 o0o0OOO0o0 = open ( i11 , mode = 'w+' )
 o0o0OOO0o0 . write ( iI11iiiI1II )
 o0o0OOO0o0 . close ( )
 if 84 - 84: iiiIi
def iIi1ii1I1 ( url , datefile , localdate , dst ) :
 try :
  o0 = urllib2 . Request ( url )
  o0 . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3' )
  I11II1i = urllib2 . urlopen ( o0 )
  IIIII = I11II1i . info ( ) . getdate ( 'last-modified' )
  IIIII = time . strftime ( '%Y%m%d%H%M%S' , IIIII )
  if int ( IIIII ) > int ( localdate ) :
   download . download ( url , dst )
   if IiII1IiiIiI1 ( '74737463686b' ) in url :
    extract . all ( dst , Oooo0000 )
   else :
    extract . all ( dst , Ii1IIii11 )
   o0o0OOO0o0 = open ( datefile , 'w+' )
   o0o0OOO0o0 . write ( IIIII )
   o0o0OOO0o0 . close ( )
  try :
   if os . path . exists ( dst ) :
    os . remove ( dst )
  except :
   pass
 except :
  pass
  if 75 - 75: II111iiii % II111iiii
def iI1 ( url , datefile , dst ) :
 if os . path . exists ( datefile ) :
  iI11i1I1 = open ( datefile , 'r' )
  i11Iiii = iI11i1I1 . read ( )
  iI11i1I1 . close ( )
 else :
  i11Iiii = 0
 iIi1ii1I1 ( url , datefile , int ( i11Iiii ) , dst )
 if 23 - 23: Ooo00oOo00o . II111iiii
def Oo0O0OOOoo ( url ) :
 o0 = urllib2 . Request ( url )
 o0 . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows; U; Windows NT 10.0; WOW64; Windows NT 5.1; en-GB; rv:1.9.0.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36 Gecko/2008092417 Firefox/3.0.3' )
 oOoOooOo0o0 = urllib2 . urlopen ( o0 )
 OOOO = oOoOooOo0o0 . read ( )
 oOoOooOo0o0 . close ( )
 return OOOO . replace ( '\r' , '' ) . replace ( '\n' , '' ) . replace ( '\t' , '' )
 if 87 - 87: iiiiIi11i / iiI1i1 - i1IIi * Ii11111i / OoooooooOO . O0
 if 1 - 1: II111iiii - iiI1i1 / iiI1i1
def I1II1III11iii ( ) :
 Oo000 = time . time ( )
 ooii11I = time . localtime ( Oo000 )
 return time . strftime ( '%Y%m%d%H%M%S' , ooii11I )
 if 96 - 96: II111iiii % oO0o . Ii11111i + OoooooooOO * iiiiIi11i - oOo0O0Ooo
 if 10 - 10: Ii11111i / oo * Ii11111i
def IIIii1II1II ( ) :
 i1I1iI = IiII1IiiIiI1 ( '687474703a2f2f6e6f6f6273616e646e657264732e636f6d2f43505f53747566662f6c6f67696e2e7068703f753d257326703d257326663d257326613d2573' ) % ( oO , i1iiIIiiI111 , oo0o0O00 , IiII )
 try :
  OOOO = Oo0O0OOOoo ( i1I1iI )
  OOOO = binascii . unhexlify ( OOOO )
 except :
  oooOOOOO . ok ( i111I . getLocalizedString ( 30833 ) , i111I . getLocalizedString ( 30834 ) )
  return
 oo0OooOOo0 = re . compile ( 'n="(.+?)"' ) . findall ( OOOO )
 o0O = oo0OooOOo0 [ 0 ] if ( len ( oo0OooOOo0 ) > 0 ) else ''
 O00oO = re . compile ( 'l="(.+?)"' ) . findall ( OOOO )
 I11i1I1I = O00oO [ 0 ] if ( len ( O00oO ) > 0 ) else ''
 oO0Oo = re . compile ( 'i="(.+?)"' ) . findall ( OOOO )
 oOOoo0Oo = oO0Oo [ 0 ] if ( len ( oO0Oo ) > 0 ) else '0.0.0.0'
 o00OO00OoO = re . compile ( 'e="(.+?)"' ) . findall ( OOOO )
 OOOO0OOoO0O0 = o00OO00OoO [ 0 ] if ( len ( o00OO00OoO ) > 0 ) else 'Unknown'
 O0Oo000ooO00 = re . compile ( 'p="(.+?)"' ) . findall ( OOOO )
 oO0 = O0Oo000ooO00 [ 0 ] if ( len ( O0Oo000ooO00 ) > 0 ) else '0'
 Ii1iIiII1ii1 = re . compile ( 'u="(.+?)"' ) . findall ( OOOO )
 ooOooo000oOO = Ii1iIiII1ii1 [ 0 ] if ( len ( Ii1iIiII1ii1 ) > 0 ) else '0'
 Oo0oOOo = re . compile ( 'm="(.+?)"' ) . findall ( OOOO )
 Oo0OoO00oOO0o = Oo0oOOo [ 0 ] if ( len ( Oo0oOOo ) > 0 ) else '0'
 OOO00O = re . compile ( 't="(.+?)"' ) . findall ( OOOO )
 OOoOO0oo0ooO = OOO00O [ 0 ] if ( len ( OOO00O ) > 0 ) else ''
 O0o0O00Oo0o0 = re . compile ( 's="(.+?)"' ) . findall ( OOOO )
 O00O0oOO00O00 = O0o0O00Oo0o0 [ 0 ] if ( len ( O0o0O00Oo0o0 ) > 0 ) else ''
 if 11 - 11: iiiIi . oOoO0oo0OOOo
 if IiII1IiiIiI1 ( '72656163746976617465' ) in I11i1I1I :
  try :
   os . remove ( oOo0oooo00o )
  except :
   pass
  oooOOOOO . ok ( i111I . getLocalizedString ( 30831 ) , i111I . getLocalizedString ( 30832 ) )
 elif IiII1IiiIiI1 ( '63757272656e746c792072657374726963746564' ) in I11i1I1I :
  oooOOOOO . ok ( i111I . getLocalizedString ( 30829 ) , i111I . getLocalizedString ( 30830 ) )
 elif IiII1IiiIiI1 ( '57726f6e672050617373776f726420456e7465726564' ) in I11i1I1I :
  try :
   os . remove ( oOo0oooo00o )
  except :
   pass
  oooOOOOO . ok ( i111I . getLocalizedString ( 30825 ) , i111I . getLocalizedString ( 30826 ) )
  i111I . openSettings ( )
 elif IiII1IiiIiI1 ( '524547495354455220464f522046524545' ) in I11i1I1I and oO0o0o0ooO0oO == 'true' :
  try :
   os . remove ( oOo0oooo00o )
  except :
   pass
  oooOOOOO . ok ( i111I . getLocalizedString ( 30827 ) , i111I . getLocalizedString ( 30828 ) )
  i111I . openSettings ( )
 elif oO0o0o0ooO0oO == 'true' and oO == '' and i1iiIIiiI111 == '' :
  oooOOOOO . ok ( i111I . getLocalizedString ( 30835 ) , i111I . getLocalizedString ( 30836 ) )
  i111I . openSettings ( )
 else :
  o0o0OOO0o0 = open ( oOo0oooo00o , mode = 'w+' )
  o0o0OOO0o0 . write ( o0oo0oOo ( 'e' , 'd="' + str ( I1II1III11iii ( ) ) + '"|w="' + I11i1I1I + '"|i="' + oOOoo0Oo + '"|e="' + OOOO0OOoO0O0 + '"|m="' + Oo0OoO00oOO0o + '"|u="' + ooOooo000oOO + '"|t="' + OOoOO0oo0ooO + '"|s="' + O00O0oOO00O00 + '"|n="' + o0O + '"|p="' + oO0 + '"' ) )
  o0o0OOO0o0 . close ( )
  o000O0o ( )
  if 42 - 42: oOo0O0Ooo
def o000O0o ( testmode = '' ) :
 Ii1I = xbmc . getInfoLabel ( 'ListItem.FolderPath' )
 IiiIII111iI = Ii1I . split ( '://' )
 IiII = IiiIII111iI [ - 1 ]
 if IiII . endswith ( '/' ) or IiII . endswith ( '\\' ) :
  IiII = IiII [ : - 1 ]
 try :
  if sys . argv [ 1 ] == IiII1IiiIiI1 ( '7465737466696c65' ) :
   IiII = IiII + '.test'
 except :
  pass
  if 41 - 41: OoO0O00 . i1I111I + O0 * Ooo00oOo00o % OoO0O00 * OoO0O00
  if 19 - 19: iI1I
 if oO0o0o0ooO0oO == 'true' and ( oO == '' or i1iiIIiiI111 == '' ) :
  oooOOOOO . ok ( i111I . getLocalizedString ( 30835 ) , i111I . getLocalizedString ( 30836 ) )
  i111I . openSettings ( )
  return
  if 46 - 46: oOoO0oo0OOOo - oO0o . iIii1I11I1II1 / oOoO0oo0OOOo
  if 7 - 7: i1IIi / oo * OO . iiiIi . iIii1I11I1II1
 elif iiI1iIiI == 'true' and oO0o0o0ooO0oO == 'false' :
  oooOOOOO . ok ( i111I . getLocalizedString ( 30305 ) , i111I . getLocalizedString ( 30962 ) )
  i111I . openSettings ( )
  return
  if 13 - 13: Ii11111i / i11iIiiIii
  if 2 - 2: oo / O0 / Ooo00oOo00o % oOo0O0Ooo % oO0o
 if not os . path . exists ( oOo0oooo00o ) :
  IIIii1II1II ( )
  if 52 - 52: Ooo00oOo00o
  if 95 - 95: oO0o
 else :
  O0oOO0O = open ( oOo0oooo00o , mode = 'r' )
  iI11iiiI1II = O0oOO0O . read ( )
  iI11iiiI1II = o0oo0oOo ( 'd' , iI11iiiI1II )
  O0oOO0O . close ( )
  if 91 - 91: O0
  oo0OooOOo0 = re . compile ( 'n="(.+?)"' ) . findall ( iI11iiiI1II )
  oOOo0 = re . compile ( 'd="(.+?)"' ) . findall ( iI11iiiI1II )
  oo00O00oO = re . compile ( 'w="(.+?)"' ) . findall ( iI11iiiI1II )
  oO0Oo = re . compile ( 'i="(.+?)"' ) . findall ( iI11iiiI1II )
  OOO00O = re . compile ( 't="(.+?)"' ) . findall ( iI11iiiI1II )
  O0o0O00Oo0o0 = re . compile ( 's="(.+?)"' ) . findall ( iI11iiiI1II )
  iIiIIIi = oOOo0 [ 0 ] if ( len ( oOOo0 ) > 0 ) else '0'
  I11i1I1I = oo00O00oO [ 0 ] if ( len ( oo00O00oO ) > 0 ) else ''
  oOOoo0Oo = oO0Oo [ 0 ] if ( len ( oO0Oo ) > 0 ) else '0.0.0.0'
  ooo00OOOooO = O00OOOoOoo0O ( )
  if 77 - 77: iI1I % iI1I * iiiiIi11i - i11iIiiIii
  if 93 - 93: OoooooooOO / oo % i11iIiiIii + oOoO0oo0OOOo * ooOO00oOo
  if len ( O0o0O00Oo0o0 ) > 0 :
   I1 = O0o0O00Oo0o0 [ 0 ] . split ( ',' )
   if 22 - 22: OoO0O00 + oO0o % oOoO0oo0OOOo
   if 9 - 9: OoooooooOO
  for OOOOo in oo0OooOOo0 :
   oo0O0oO = ( IiII1IiiIiI1 ( '687474703a2f2f6e6f6f6273616e646e657264732e636f6d2f43505f53747566662f' ) + IIII + '/' + OOOOo + '.jpeg' )
   iI1 ( oo0O0oO , xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f70726f66696c652f6164646f6e5f646174612f' ) + IIII + '/' + OOOOo ) , i1iiIII111ii )
   if 60 - 60: oo
   if 22 - 22: II111iiii
  if oO0o0o0ooO0oO == 'true' :
   if 33 - 33: iiI1i1
   if 18 - 18: Ooo00oOo00o % iI1I * O0
   if iiI1iIiI == 'true' :
    global ii11iIi1I
    o0O0Oooo0O = OOO00O [ 0 ] . split ( '|' )
    ii11iIi1I = o0O0Oooo0O [ 0 ]
    iI111I11I1I1 = o0O0Oooo0O [ 1 ] . split ( ',' )
    if 84 - 84: iI1I . oOoO0oo0OOOo / OoO0O00 - oo / OoooooooOO / Ooo00oOo00o
    if not IiII . endswith ( IiII1IiiIiI1 ( '2e74657374' ) ) :
     II111iiiI1Ii = IiII + IiII1IiiIiI1 ( '2e74657374' )
    else :
     II111iiiI1Ii = IiII
     IiII = IiII . replace ( IiII1IiiIiI1 ( '2e74657374' ) , '' )
     if 78 - 78: oO0o % OO + oOoO0oo0OOOo
    if len ( iI111I11I1I1 ) > 0 and not os . path . exists ( os . path . join ( Oooo0000 , II111iiiI1Ii ) ) :
     try :
      oo0O0oO = ( IiII1IiiIiI1 ( '687474703a2f2f6e6f6f6273616e646e657264732e636f6d2f43505f53747566662f' ) + IiII + '/' + iI111I11I1I1 [ 0 ] + '.jpeg' )
      iI1 ( oo0O0oO , xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f70726f66696c652f6164646f6e5f646174612f' ) + IiII + '/' + iI111I11I1I1 [ 0 ] ) , i1iiIII111ii )
      xbmc . executebuiltin ( 'UpdateLocalAddons' )
      if 64 - 64: iiiiIi11i * O0 . oo + II111iiii
      xbmc . sleep ( 2000 )
      xbmcaddon . Addon ( id = II111iiiI1Ii ) . openSettings ( )
      return
     except :
      oooOOOOO . ok ( i111I . getLocalizedString ( 30965 ) , i111I . getLocalizedString ( 30966 ) )
      return
    elif len ( iI111I11I1I1 ) == 0 :
     oooOOOOO . ok ( i111I . getLocalizedString ( 30963 ) , i111I . getLocalizedString ( 30964 ) )
     return
     if 6 - 6: oOo0O0Ooo / iI1I . iiiIi . iiiIi
   xbmc . executebuiltin ( "XBMC.Notification(" + i111I . getLocalizedString ( 30807 ) + "," + i111I . getLocalizedString ( 30808 ) + ",10000," + I11 + ")" )
   if 62 - 62: oOoO0oo0OOOo + iiiIi % iI1I + Ii11111i
   if 33 - 33: O0 . iiiIi . oo
   if IiII1IiiIiI1 ( '72656163746976617465' ) in I11i1I1I :
    try :
     os . remove ( oOo0oooo00o )
    except :
     pass
    oooOOOOO . ok ( i111I . getLocalizedString ( 30831 ) , i111I . getLocalizedString ( 30832 ) )
    if 72 - 72: i1IIi / ooOO00oOo + OoooooooOO - OoO0O00
    if 29 - 29: oOoO0oo0OOOo + iiiiIi11i % O0
   elif IiII1IiiIiI1 ( '63757272656e746c792072657374726963746564' ) in I11i1I1I :
    oooOOOOO . ok ( i111I . getLocalizedString ( 30829 ) , i111I . getLocalizedString ( 30830 ) )
    if 10 - 10: iiI1i1 / OO - oo * iIii1I11I1II1 - oo
    if 97 - 97: oOoO0oo0OOOo + oo * oO0o + Ii11111i % iI1I
   elif IiII1IiiIiI1 ( '57726f6e672050617373776f726420456e7465726564' ) in I11i1I1I :
    try :
     os . remove ( oOo0oooo00o )
    except :
     pass
    oooOOOOO . ok ( i111I . getLocalizedString ( 30825 ) , i111I . getLocalizedString ( 30826 ) )
    i111I . openSettings ( )
    if 74 - 74: iiiiIi11i - OoO0O00 + OoooooooOO + OO / oOo0O0Ooo
    if 23 - 23: O0
   elif IiII1IiiIiI1 ( '524547495354455220464f522046524545' ) in I11i1I1I :
    try :
     os . remove ( oOo0oooo00o )
    except :
     pass
    oooOOOOO . ok ( i111I . getLocalizedString ( 30827 ) , i111I . getLocalizedString ( 30828 ) )
    i111I . openSettings ( )
    if 85 - 85: oO0o
    if 84 - 84: oo . iIii1I11I1II1 % OoooooooOO + oO0o % OoooooooOO % ooOO00oOo
   elif int ( iIiIIIi ) + 1000000 > int ( I1II1III11iii ( ) ) and oOOoo0Oo == ooo00OOOooO :
    if iiI1iIiI == 'true' :
     for OOOOo in iI111I11I1I1 :
      oo0O0oO = ( IiII1IiiIiI1 ( '687474703a2f2f6e6f6f6273616e646e657264732e636f6d2f43505f53747566662f' ) + IiII + '/' + OOOOo + '.jpeg' )
      IIi1 = OOOOo . replace ( 'test' , '' )
      if xbmcaddon . Addon ( id = i1I1ii1II1iII ) . getSetting ( IIi1 ) == 'true' :
       iI1 ( oo0O0oO , xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f70726f66696c652f6164646f6e5f646174612f' ) + i1I1ii1II1iII + '/' + OOOOo ) , i1iiIII111ii )
    for OOOOo in I1 :
     oo0O0oO = ( IiII1IiiIiI1 ( '687474703a2f2f6e6f6f6273616e646e657264732e636f6d2f43505f53747566662f' ) + IIII + '/' + OOOOo + '.jpeg' )
     if i111I . getSetting ( OOOOo ) == 'true' :
      iI1 ( oo0O0oO , xbmc . translatePath ( IiII1IiiIiI1 ( '7370656369616c3a2f2f70726f66696c652f6164646f6e5f646174612f' ) + IIII + '/' + OOOOo ) , i1iiIII111ii )
    xbmc . executebuiltin ( 'Dialog.Close(busydialog)' )
    I1I1I ( )
    if 95 - 95: II111iiii + Ooo00oOo00o + iI1I * iIii1I11I1II1 % iiiiIi11i / iiiIi
   else :
    IIIii1II1II ( )
  elif oO0o0o0ooO0oO == 'false' :
   I1I1I ( )
   if 56 - 56: iI1I
def O00OOOoOoo0O ( ) :
 i1I1iI = IiII1IiiIiI1 ( '687474703a2f2f7768617469736d796970616464726573732e636f6d' )
 OOOO = Oo0O0OOOoo ( i1I1iI ) . replace ( '\n' , '' ) . replace ( '\r' , '' )
 oO0Oo = re . compile ( IiII1IiiIiI1 ( '7768617469736d796970616464726573732e636f6d2f' ) + 'ip/(.+?)"' ) . findall ( OOOO )
 oo0oO0oOOoo = oO0Oo [ 0 ] if ( len ( oO0Oo ) > 0 ) else ''
 return oo0oO0oOOoo
 if 51 - 51: OoO0O00 * i11iIiiIii
 if 94 - 94: oO0o - II111iiii . Ii11111i % iiI1i1 . i11iIiiIii + O0
def o0oo0oOo ( mode , message ) :
 I1IiiiiI = ''
 if mode == 'e' :
  I1IiiiiI = ''
  o0OIiII = len ( oO )
  if 25 - 25: O0 - O0 * Ooo00oOo00o
  OOOO0oo0 = ''
  I11iiI1i1 = ''
  for I1i1Iiiii in message :
   OOo0oO00ooO00 = ord ( I1i1Iiiii ) + o0OIiII
   if len ( str ( OOo0oO00ooO00 ) ) == 2 :
    OOo0oO00ooO00 = '0' + str ( OOo0oO00ooO00 )
   I11iiI1i1 = str ( I11iiI1i1 ) + str ( OOo0oO00ooO00 )
  return I11iiI1i1 + I1IiiiiI
 else :
  oOO0O00oO0Ooo = len ( oO )
  oO0Oo0O0o = [ message [ OOI1iI1ii1II : OOI1iI1ii1II + 3 ] for OOI1iI1ii1II in range ( 0 , len ( message ) , 3 ) ]
  for OOOOo in oO0Oo0O0o :
   OOOOo = int ( OOOOo ) - oOO0O00oO0Ooo
   OOOOo = str ( unichr ( OOOOo ) )
   I1IiiiiI = I1IiiiiI + OOOOo
  return I1IiiiiI
  if 57 - 57: OO % oO0o + Ooo00oOo00o - OoO0O00
def I1I1I ( ) :
 o0OIiI1i = xbmcgui . Window ( 10000 ) . getProperty ( 'TVP_WINDOW' )
 try :
  o0OIiI1i = int ( o0OIiI1i )
  xbmc . executebuiltin ( 'ActivateWindow(%d)' % o0OIiI1i )
  return
 except :
  pass
  if 92 - 92: iiiIi . iiiIi + ooOO00oOo
 if iiI1iIiI == 'true' and oO0o0o0ooO0oO == 'true' :
  IiIiI1111I1I = os . path . join ( Oooo0000 , i1I1ii1II1iII , 'login.py' )
  i1i = ii11iIi1I
 else :
  IiIiI1111I1I = os . path . join ( Oooo0000 , IiII , ii11iIi1I )
  i1i = ''
  if 56 - 56: oOoO0oo0OOOo % O0 - oo
 O00o0OO0 = IiII + ' Launcher'
 IIi1I1iiiii = 'AlarmClock(%s,RunScript(%s,%s),%d,True)' % ( O00o0OO0 , IiIiI1111I1I , i1i , 0 )
 if 71 - 71: iiiIi * II111iiii * iiiiIi11i
 xbmc . executebuiltin ( 'CancelAlarm(%s,True)' % O00o0OO0 )
 xbmc . executebuiltin ( IIi1I1iiiii )
 if 56 - 56: oo
try :
 Ii1I = xbmc . getInfoLabel ( 'ListItem.FolderPath' )
 if sys . argv [ 1 ] == IiII1IiiIiI1 ( '7465737466696c65' ) and oO0o0o0ooO0oO == 'true' :
  if not Ii1I . endswith ( '.test' ) and os . path . exists ( os . path . join ( Oooo0000 , IIII ) ) and os . path . exists ( os . path . join ( Oooo0000 , i1I1ii1II1iII ) ) :
   o000O0o ( 'true' )
 if sys . argv [ 1 ] == IiII1IiiIiI1 ( '73657474696e6773' ) :
  if not os . path . exists ( os . path . join ( Oooo0000 , i1I1ii1II1iII ) ) :
   oooOOOOO . ok ( i111I . getLocalizedString ( 30901 ) , i111I . getLocalizedString ( 30902 ) )
  else :
   xbmcaddon . Addon ( id = i1I1ii1II1iII ) . openSettings ( )
except :
 pass # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
')